// Generated by re2zig 4.1 on Fri Apr 25 00:17:26 2025
const std = @import("std");

pub const Token = struct {
    token_type: TokenType,
    value: []const u8,
    column: usize,
    line: usize 
};

pub const TokenType = enum {
    Say,
    Tellraw,
    Selector,
    Comma,
    Colon,
    Equal,
    LBracket,
    RBracket,
    LCurly,
    RCurly,
    LParen,
    RParen,
    RangeOp,
    Space,
    LF,
    StringLiteral,
    IntLiteral,
    FloatLiteral,
    Eof,
    Error,
};

pub const LexerStatus = struct {
    yyinput: []const u8,
    yylimit: usize,
    line: usize = 1,
    token_start: usize = 0,
    yycursor: usize = 0,
    yymarker: usize = 0,
    yyctxmarker: usize = 0,

    const Self = @This();

    pub fn init(input: []const u8) @This() {
        return .{
            .yyinput = input,
            .yylimit = input.len
        };
    }

    fn getToken(self: *Self, token_type: TokenType) Token {
        return .{
            .token_type = token_type,
            .column = self.yycursor,
            .line = self.line,
            .value = self.yyinput[self.token_start..self.yycursor],
        };
    }
};

pub fn lex(yyrecord: *LexerStatus) !Token {
    if (yyrecord.yycursor >= yyrecord.yylimit) {
        return yyrecord.getToken(.Eof);
    }

    yyrecord.token_start = yyrecord.yycursor;

    
    var yych: u8 = 0;
    var yystate: u32 = 0;
    yyl: while (true) {
        switch (yystate) {
            0 => {
                yych = yyrecord.yyinput[yyrecord.yycursor];
                yyrecord.yycursor += 1;
                switch (yych) {
                    0x0A => {
                        yystate = 3;
                        continue :yyl;
                    },
                    0x0D => {
                        yystate = 5;
                        continue :yyl;
                    },
                    0x20 => {
                        yystate = 6;
                        continue :yyl;
                    },
                    0x22 => {
                        yystate = 7;
                        continue :yyl;
                    },
                    0x23 => {
                        yystate = 8;
                        continue :yyl;
                    },
                    0x2C => {
                        yystate = 10;
                        continue :yyl;
                    },
                    0x2D => {
                        yystate = 11;
                        continue :yyl;
                    },
                    0x2E => {
                        yystate = 12;
                        continue :yyl;
                    },
                    0x30...0x39 => {
                        yystate = 13;
                        continue :yyl;
                    },
                    0x3A => {
                        yystate = 15;
                        continue :yyl;
                    },
                    0x3D => {
                        yystate = 16;
                        continue :yyl;
                    },
                    0x40 => {
                        yystate = 17;
                        continue :yyl;
                    },
                    0x73 => {
                        yystate = 18;
                        continue :yyl;
                    },
                    0x74 => {
                        yystate = 19;
                        continue :yyl;
                    },
                    else => {
                        yystate = 1;
                        continue :yyl;
                    },
                }
            },
            1 => {
                yystate = 2;
                continue :yyl;
            },
            2 => { return yyrecord.getToken(.Error); },
            3 => {
                yych = yyrecord.yyinput[yyrecord.yycursor];
                switch (yych) {
                    0x0D => {
                        yyrecord.yycursor += 1;
                        yystate = 20;
                        continue :yyl;
                    },
                    else => {
                        yystate = 4;
                        continue :yyl;
                    },
                }
            },
            4 => { 
            yyrecord.line += 1;
            var token = yyrecord.getToken(.LF);
            token.value = "\\n";
            return token;
 },
            5 => {
                yych = yyrecord.yyinput[yyrecord.yycursor];
                switch (yych) {
                    0x0A => {
                        yyrecord.yycursor += 1;
                        yystate = 20;
                        continue :yyl;
                    },
                    else => {
                        yystate = 2;
                        continue :yyl;
                    },
                }
            },
            6 => { return yyrecord.getToken(.Space); },
            7 => {
                yych = yyrecord.yyinput[yyrecord.yycursor];
                yyrecord.yycursor += 1;
                switch (yych) {
                    0x22 => {
                        yystate = 21;
                        continue :yyl;
                    },
                    else => {
                        yystate = 7;
                        continue :yyl;
                    },
                }
            },
            8 => {
                yych = yyrecord.yyinput[yyrecord.yycursor];
                switch (yych) {
                    0x0A => {
                        yystate = 9;
                        continue :yyl;
                    },
                    else => {
                        yyrecord.yycursor += 1;
                        yystate = 8;
                        continue :yyl;
                    },
                }
            },
            9 => { 
            yystate = 0;
            continue :yyl;
 },
            10 => { return yyrecord.getToken(.Comma); },
            11 => {
                yyrecord.yymarker = yyrecord.yycursor;
                yych = yyrecord.yyinput[yyrecord.yycursor];
                switch (yych) {
                    0x2E => {
                        yyrecord.yycursor += 1;
                        yystate = 22;
                        continue :yyl;
                    },
                    0x30...0x39 => {
                        yyrecord.yycursor += 1;
                        yystate = 13;
                        continue :yyl;
                    },
                    else => {
                        yystate = 2;
                        continue :yyl;
                    },
                }
            },
            12 => {
                yych = yyrecord.yyinput[yyrecord.yycursor];
                switch (yych) {
                    0x2E => {
                        yyrecord.yycursor += 1;
                        yystate = 24;
                        continue :yyl;
                    },
                    0x30...0x39 => {
                        yyrecord.yycursor += 1;
                        yystate = 25;
                        continue :yyl;
                    },
                    else => {
                        yystate = 2;
                        continue :yyl;
                    },
                }
            },
            13 => {
                yych = yyrecord.yyinput[yyrecord.yycursor];
                switch (yych) {
                    0x2E => {
                        yyrecord.yycursor += 1;
                        yystate = 25;
                        continue :yyl;
                    },
                    0x30...0x39 => {
                        yyrecord.yycursor += 1;
                        yystate = 13;
                        continue :yyl;
                    },
                    else => {
                        yystate = 14;
                        continue :yyl;
                    },
                }
            },
            14 => { return yyrecord.getToken(.IntLiteral); },
            15 => { return yyrecord.getToken(.Colon); },
            16 => { return yyrecord.getToken(.Equal); },
            17 => {
                yych = yyrecord.yyinput[yyrecord.yycursor];
                switch (yych) {
                    0x61,
                    0x65,
                    0x6E,
                    0x70,
                    0x73 => {
                        yyrecord.yycursor += 1;
                        yystate = 27;
                        continue :yyl;
                    },
                    else => {
                        yystate = 2;
                        continue :yyl;
                    },
                }
            },
            18 => {
                yyrecord.yymarker = yyrecord.yycursor;
                yych = yyrecord.yyinput[yyrecord.yycursor];
                switch (yych) {
                    0x61 => {
                        yyrecord.yycursor += 1;
                        yystate = 28;
                        continue :yyl;
                    },
                    else => {
                        yystate = 2;
                        continue :yyl;
                    },
                }
            },
            19 => {
                yyrecord.yymarker = yyrecord.yycursor;
                yych = yyrecord.yyinput[yyrecord.yycursor];
                switch (yych) {
                    0x65 => {
                        yyrecord.yycursor += 1;
                        yystate = 29;
                        continue :yyl;
                    },
                    else => {
                        yystate = 2;
                        continue :yyl;
                    },
                }
            },
            20 => {
                yystate = 4;
                continue :yyl;
            },
            21 => { return yyrecord.getToken(.StringLiteral); },
            22 => {
                yych = yyrecord.yyinput[yyrecord.yycursor];
                switch (yych) {
                    0x30...0x39 => {
                        yyrecord.yycursor += 1;
                        yystate = 25;
                        continue :yyl;
                    },
                    else => {
                        yystate = 23;
                        continue :yyl;
                    },
                }
            },
            23 => {
                yyrecord.yycursor = yyrecord.yymarker;
                yystate = 2;
                continue :yyl;
            },
            24 => { return yyrecord.getToken(.RangeOp); },
            25 => {
                yych = yyrecord.yyinput[yyrecord.yycursor];
                switch (yych) {
                    0x30...0x39 => {
                        yyrecord.yycursor += 1;
                        yystate = 25;
                        continue :yyl;
                    },
                    else => {
                        yystate = 26;
                        continue :yyl;
                    },
                }
            },
            26 => { return yyrecord.getToken(.FloatLiteral); },
            27 => { return yyrecord.getToken(.Selector); },
            28 => {
                yych = yyrecord.yyinput[yyrecord.yycursor];
                switch (yych) {
                    0x79 => {
                        yyrecord.yycursor += 1;
                        yystate = 30;
                        continue :yyl;
                    },
                    else => {
                        yystate = 23;
                        continue :yyl;
                    },
                }
            },
            29 => {
                yych = yyrecord.yyinput[yyrecord.yycursor];
                switch (yych) {
                    0x6C => {
                        yyrecord.yycursor += 1;
                        yystate = 31;
                        continue :yyl;
                    },
                    else => {
                        yystate = 23;
                        continue :yyl;
                    },
                }
            },
            30 => { return yyrecord.getToken(.Say); },
            31 => {
                yych = yyrecord.yyinput[yyrecord.yycursor];
                switch (yych) {
                    0x6C => {
                        yyrecord.yycursor += 1;
                        yystate = 32;
                        continue :yyl;
                    },
                    else => {
                        yystate = 23;
                        continue :yyl;
                    },
                }
            },
            32 => {
                yych = yyrecord.yyinput[yyrecord.yycursor];
                switch (yych) {
                    0x72 => {
                        yyrecord.yycursor += 1;
                        yystate = 33;
                        continue :yyl;
                    },
                    else => {
                        yystate = 23;
                        continue :yyl;
                    },
                }
            },
            33 => {
                yych = yyrecord.yyinput[yyrecord.yycursor];
                switch (yych) {
                    0x61 => {
                        yyrecord.yycursor += 1;
                        yystate = 34;
                        continue :yyl;
                    },
                    else => {
                        yystate = 23;
                        continue :yyl;
                    },
                }
            },
            34 => {
                yych = yyrecord.yyinput[yyrecord.yycursor];
                switch (yych) {
                    0x77 => {
                        yyrecord.yycursor += 1;
                        yystate = 35;
                        continue :yyl;
                    },
                    else => {
                        yystate = 23;
                        continue :yyl;
                    },
                }
            },
            35 => { return yyrecord.getToken(.Tellraw); },
            else => { @panic("internal lexer error"); },
        }
    }

}
